// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum PaidStatus {
  PENDING
  PAID
  CANCEL
}

model Customer {
  id             Int         @id @default(autoincrement())
  Email          String      @unique
  Password       String      @db.VarChar(72)
  Displayname    String      @map("display_name")
  Phone          String?
  CreatedDate    DateTime    @default(now()) @map("created_date")
  Profilepicture String      @default("https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/434px-Unknown_person.jpg") @map("profile_picture")
  Cart           Cart[]
  Payment        Payment[]
  Inventory      Inventory[]
}

model Product {
  id          Int         @id @default(autoincrement())
  Name        String
  Description String
  PublishDate DateTime
  Author      String
  Price       Int
  Tag         String
  Image       String
  download    Download    @relation(fields: [DownloadID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  DownloadID  Int         @unique
  Cart        Cart[]
  Inventory   Inventory[]

  @@fulltext([Name, Description])
}

model Download {
  id        Int         @id @default(autoincrement())
  url       String
  Product   Product?
  Inventory Inventory[]
}

model Cart {
  id          Int      @id @default(autoincrement())
  payment     Payment  @relation(fields: [Payment_ID], references: [id])
  Payment_ID  Int      @unique
  customer    Customer @relation(fields: [Customer_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Customer_ID Int
  product     Product  @relation(fields: [Product_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Product_ID  Int
}

model Payment {
  id          Int        @id @default(autoincrement())
  Method      String
  Status      PaidStatus @default(PENDING)
  customer    Customer   @relation(fields: [Customer_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Customer_ID Int
  Inventory   Inventory?
  Cart        Cart?
}

model Inventory {
  id           Int      @id @default(autoincrement())
  PurchaseDate DateTime @default(now())
  customer     Customer @relation(fields: [Customer_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Customer_ID  Int
  product      Product  @relation(fields: [Product_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Product_ID   Int
  payment      Payment  @relation(fields: [Payment_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Payment_ID   Int      @unique
  download     Download @relation(fields: [Download_ID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Download_ID  Int
}

enum PERMISSION {
  ADMIN
  EDITOR
}

model Employees {
  id         Int        @id @default(autoincrement())
  Username   String     @unique
  Password   String
  Permission PERMISSION @default(EDITOR)
}
